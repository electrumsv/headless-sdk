trigger:
  batch: true
  branches:
    include:
    - master
    - releases/*
    - features/*
  paths:
    exclude: [ 'README.md' ]

jobs:
- job: BuildWindows

  pool:
    vmImage: 'windows-latest'

  variables:
    BUILD_PATH: '$(Build.BinariesDirectory)/win32'
    PYTHON_DIR: '$(Build.BinariesDirectory)/win32/cpython-3.9.6-x86_64'
    SDK_DATADIR: '$(Build.BinariesDirectory)/win32/ElectrumSV-SDK'
    SDK_REPO_DIR: '$(Build.BinariesDirectory)/win32/sdk_repo'

  steps :
    # Note: For windows we use the official python.org embedded python
    - pwsh: |
        Invoke-WebRequest -uri "https://www.python.org/ftp/python/3.9.6/python-3.9.6-embed-amd64.zip" -Method "GET" -Outfile "$(BUILD_PATH)/cpython-3.9.6-x86_64.zip"
        Expand-Archive -Path "$(BUILD_PATH)/cpython-3.9.6-x86_64.zip" -DestinationPath "$(BUILD_PATH)/cpython-3.9.6-x86_64"
      displayName: 'pull embedded python'

    - pwsh: |
        mkdir -p $(Build.BinariesDirectory)/win32/ElectrumSV-SDK
        cd $(Build.BinariesDirectory)/win32/ElectrumSV-SDK
        echo "testing" > testfile.txt
        cd ..

        git clone --depth 1 https://github.com/electrumsv/electrumsv-sdk.git "$(SDK_REPO_DIR)"
      displayName: 'clone ElectrumSV-SDK & make empty artifact dir'

    - pwsh: |
        echo "Todo: pass an env var SDK_HOME_DATADIR into the setup.py which should allow for a local SDK datadir"
        echo "Todo: allow for a pip install template (requires --target arg for this to work)"
      displayName: 'configure python'

    # Overwrites existing $env:PYTHON_DIR.zip archive
    - pwsh: |
        Compress-Archive -Path "$env:PYTHON_DIR" -DestinationPath "$env:PYTHON_DIR.zip" -Force
        Compress-Archive -Path "$env:SDK_DATADIR" -DestinationPath "$env:SDK_DATADIR.zip"
      displayName: 'Create compressed archives'

    - task: PublishBuildArtifacts@1
      displayName: 'publish pre-installed python'
      inputs:
        artifactName: 'Win32Python'
        pathtoPublish: '$(PYTHON_DIR).zip'

    - task: PublishBuildArtifacts@1
      displayName: 'publish ElectrumSV-SDK datadir'
      inputs:
        artifactName: 'Win32SDKDatadir'
        pathtoPublish: '$(SDK_DATADIR).zip'


- job: BuildLinux

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    BUILD_PATH: '$(Build.BinariesDirectory)/linux'
    PYTHON_DIR: '$(Build.BinariesDirectory)/linux/cpython-3.9.6-x86_64'
    SDK_DATADIR: '$(Build.BinariesDirectory)/linux/ElectrumSV-SDK'
    SDK_REPO_DIR: '$(Build.BinariesDirectory)/linux/sdk_repo'

  steps :
    - script: |
        set -e
        sudo apt-get update
        sudo apt-get install zstd
        mkdir -p $(BUILD_PATH)/cpython-3.9.6-x86_64
        wget https://github.com/indygreg/python-build-standalone/releases/download/20210724/cpython-3.9.6-x86_64-unknown-linux-gnu-pgo+lto-20210724T1424.tar.zst -O $(BUILD_PATH)/cpython-3.9.6-x86_64.tar.zst
        tar -axvf $(BUILD_PATH)/cpython-3.9.6-x86_64.tar.zst -C $(BUILD_PATH)/cpython-3.9.6-x86_64
      displayName: 'pull embedded python'

    - script: |
        set -e
        mkdir -p $(Build.BinariesDirectory)/linux/ElectrumSV-SDK
        cd $(Build.BinariesDirectory)/linux/ElectrumSV-SDK
        echo "testing" > testfile.txt
        cd ..

        git clone --depth 1 https://github.com/electrumsv/electrumsv-sdk.git $(SDK_REPO_DIR)
      displayName: 'clone ElectrumSV-SDK & make empty artifact dir'

    - script: |
        echo "Todo: pass an env var SDK_HOME_DATADIR into the setup.py which should allow for a local SDK datadir"
        echo "Todo: allow for a pip install template (requires --target arg for this to work)"
      displayName: 'configure python'

    - script: |
        mkdir cpython-3.9.6-x86_64
        mkdir ElectrumSV-SDK
        tar -czf $(PYTHON_DIR).tar.gz cpython-3.9.6-x86_64
        tar -czf $(SDK_DATADIR).tar.gz ElectrumSV-SDK
      displayName: 'Create compressed archives'

    - task: PublishBuildArtifacts@1
      displayName: 'publish pre-installed python'
      inputs:
        artifactName: 'LinuxPython'
        pathtoPublish: '$(PYTHON_DIR).tar.gz'

    - task: PublishBuildArtifacts@1
      displayName: 'publish ElectrumSV-SDK datadir'
      inputs:
        artifactName: 'LinuxSDKDatadir'
        pathtoPublish: '$(SDK_DATADIR).tar.gz'

- job: BuildMacOSX

  pool:
    vmImage: 'macOS-10.15'

  variables:
    BUILD_PATH: '$(Build.BinariesDirectory)/macosx'
    PYTHON_DIR: '$(Build.BinariesDirectory)/macosx/cpython-3.9.6-x86_64'
    SDK_DATADIR: '$(Build.BinariesDirectory)/macosx/ElectrumSV-SDK'
    SDK_REPO_DIR: '$(Build.BinariesDirectory)/macosx/sdk_repo'

  steps :
    - script: |
        set -e
        brew install zstd
        mkdir -p $(BUILD_PATH)/cpython-3.9.6-x86_64
        wget https://github.com/indygreg/python-build-standalone/releases/download/20210724/cpython-3.9.6-x86_64-apple-darwin-pgo+lto-20210724T1424.tar.zst -O $(BUILD_PATH)/cpython-3.9.6-x86_64.tar.zst
        zstd -d $(BUILD_PATH)/cpython-3.9.6-x86_64.tar.zst
        tar -xvf $(BUILD_PATH)/cpython-3.9.6-x86_64.tar -C $(BUILD_PATH)/cpython-3.9.6-x86_64'
      displayName: 'pull embedded python'

    - script: |
        set -e
        mkdir -p $(Build.BinariesDirectory)/linux/ElectrumSV-SDK
        cd $(Build.BinariesDirectory)/linux/ElectrumSV-SDK
        echo "testing" > testfile.txt
        cd ..

        git clone --depth 1 https://github.com/electrumsv/electrumsv-sdk.git $(SDK_REPO_DIR)
      displayName: 'clone ElectrumSV-SDK & make empty artifact dir'

    - script: |
        echo "Todo: pass an env var SDK_HOME_DATADIR into the setup.py which should allow for a local SDK datadir"
        echo "Todo: allow for a pip install template (requires --target arg for this to work)"
      displayName: 'configure python'

    - script: |
        mkdir cpython-3.9.6-x86_64
        mkdir ElectrumSV-SDK
        tar -czf $(PYTHON_DIR).tar.gz cpython-3.9.6-x86_64
        tar -czf $(SDK_DATADIR).tar.gz ElectrumSV-SDK
      displayName: 'Create compressed archives'

    - task: PublishBuildArtifacts@1
      displayName: 'publish pre-installed python'
      inputs:
        artifactName: 'MacosPython'
        pathtoPublish: '$(PYTHON_DIR).tar.gz'

    - task: PublishBuildArtifacts@1
      displayName: 'publish ElectrumSV-SDK datadir'
      inputs:
        artifactName: 'MacosSDKDatadir'
        pathtoPublish: '$(SDK_DATADIR).tar.gz'

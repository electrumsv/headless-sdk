steps :
# Note: For windows we use the official python.org embedded python
- pwsh: |
    mkdir -p $(BUILD_PATH)
    Invoke-WebRequest -uri "https://www.python.org/ftp/python/3.9.6/python-3.9.6-embed-amd64.zip" -Method "GET" -Outfile $(BUILD_PATH)\cpython-3.9.6-x86_64.zip
    Expand-Archive -Path $(BUILD_PATH)\cpython-3.9.6-x86_64.zip -DestinationPath $(PYTHON_DIR)
  displayName: 'Pull embedded python'

- pwsh: |
    Invoke-WebRequest -uri "https://bootstrap.pypa.io/get-pip.py" -Method "GET" -Outfile $(PYTHON_DIR)\get-pip.py
    $(PYTHON_EXE) $(PYTHON_DIR)\get-pip.py
  displayName: 'Install pip'

- script: |
    python3 -m pip install asyncpg
    python3 $(Build.Repository.LocalPath)/contrib/mapi_db_config.py
  displayName: 'Prepare postgres'

- pwsh: |
    cp -r .\contrib\sitecustomize.py $(PYTHON_DIR)\sitecustomize.py
    cp -r .\contrib\python39._pth $(PYTHON_DIR)\python39._pth
    ls $(PYTHON_DIR)

    $env:TOP_LEVEL_DIR=$PWD
    git clone --depth 1 https://github.com/electrumsv/electrumsv-sdk.git "$(SDK_REPO_DIR)"
    cd $(SDK_REPO_DIR)
    $(PYTHON_EXE) -m pip install .
    cd $env:TOP_LEVEL_DIR
  displayName: 'install ElectrumSV-SDK'

- template: preinstall_components.yaml

- script: |
    python3 -m pip install pyinstaller
    $(Build.Repository.LocalPath)/contrib/make_launcher/make_exe_win.bat
  displayName: 'Create exe launcher'
  continueOnError: true

# Overwrites existing $env:PYTHON_DIR.zip archive
- pwsh: |
    cd $(BUILD_PATH)
    mkdir -p $(BUILD_PATH)/headless_sdk
    cp -r $(PYTHON_DIR) $(BUILD_PATH)/headless_sdk/python
    cp -r $(SDK_DATADIR) $(BUILD_PATH)/headless_sdk/SDK_HOME_DIR
    cp $(Build.Repository.LocalPath)/contrib/make_launcher/dist/electrumsv-sdk.exe $(BUILD_PATH)/headless_sdk/electrumsv-sdk.exe
    cp $(Build.Repository.LocalPath)/contrib/make_launcher/.env $(BUILD_PATH)/headless_sdk/.env
    Compress-Archive -Path "$env:BUILD_PATH/headless_sdk" -DestinationPath "headless-sdk-$env:SDK_VERSION-win32-x86_64.zip"

    ls $(BUILD_PATH)/headless_sdk

  displayName: 'Create compressed archives'

- task: PublishBuildArtifacts@1
  displayName: 'Publish ElectrumSV-SDK datadir'
  inputs:
    artifactName: 'Win32SDKHeadless'
    pathtoPublish: "$(BUILD_PATH)/headless-sdk-$(SDK_VERSION)-win32-x86_64.zip"

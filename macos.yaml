steps:
- script: |
    set -e
    brew install zstd
    mkdir -p $(PYTHON_DIR)
    wget https://github.com/indygreg/python-build-standalone/releases/download/20211017/cpython-3.10.0-x86_64-apple-darwin-pgo+lto-20211017T1616.tar.zst -O $(BUILD_PATH)/cpython-3.10.0-x86_64.tar.zst
    zstd -d $(BUILD_PATH)/cpython-3.10.0-x86_64.tar.zst
    tar -xvf $(BUILD_PATH)/cpython-3.10.0-x86_64.tar -C $(PYTHON_DIR)
  displayName: 'Pull embedded python'

- script: |
    wget "https://bootstrap.pypa.io/get-pip.py" -O $(PYTHON_SCRIPTS_DIR)/get-pip.py
    $(PYTHON_EXE) $(PYTHON_SCRIPTS_DIR)/get-pip.py
  displayName: 'Install pip'

- script: |
    cp -r ./contrib/sitecustomize.py $(PYTHON_EXE)/sitecustomize.py
    cp -r ./contrib/python310._pth.unix $(PYTHON_EXE)/python310._pth
    export TOP_LEVEL_DIR=$PWD
    git clone --depth 1 https://github.com/electrumsv/electrumsv-sdk.git $(SDK_REPO_DIR)
    cd $(SDK_REPO_DIR)
    $(PYTHON_EXE) -m pip install .
    cd $TOP_LEVEL_DIR
  displayName: 'Install ElectrumSV-SDK'

- template: preinstall_components.yaml
- template: test_components.yaml

- script: |
    rm $(SDK_HOME_DIR)/component_state.json
    touch $(SDK_HOME_DIR)/component_state.json

    rm -r $(SDK_HOME_DIR)/component_datadirs/electrumsv

    rm -r $(SDK_HOME_DIR)/logs
    mkdir -p $(SDK_HOME_DIR)/logs
  displayName: 'Reset component_state.json'
  continueOnError: true

- script: |
    cd $(BUILD_PATH)
    mkdir headless_sdk
    cp -r $(PYTHON_DIR)/python headless_sdk/python
    cp -r $(SDK_HOME_DIR) headless_sdk/SDK_HOME_DIR

    cp $(Build.Repository.LocalPath)/contrib/launcher/electrumsv-sdk.py headless_sdk/python/install/bin/electrumsv-sdk.py
    cp $(Build.Repository.LocalPath)/contrib/launcher/electrumsv-sdk.sh headless_sdk/electrumsv-sdk.sh
    cp $(Build.Repository.LocalPath)/contrib/launcher/.env headless_sdk/.env
    chmod +x headless_sdk/electrumsv-sdk.sh
    chmod 755 -R headless_sdk/SDK_HOME_DIR

    tar -czf headless-sdk-$(SDK_VERSION)-macos-x86_64.tar.gz headless_sdk
  displayName: 'Create compressed archive'

- task: PublishBuildArtifacts@1
  displayName: 'Publish headless SDK'
  inputs:
    artifactName: 'MacOSSDKHeadless'
    pathtoPublish: '$(BUILD_PATH)/headless-sdk-$(SDK_VERSION)-macos-x86_64.tar.gz'

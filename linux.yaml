steps:
- script: |
    set -e
    sudo apt-get update
    sudo apt-get install zstd
    mkdir -p $(PYTHON_DIR)
    wget https://github.com/indygreg/python-build-standalone/releases/download/20210724/cpython-3.9.6-x86_64-unknown-linux-gnu-pgo+lto-20210724T1424.tar.zst -O $(BUILD_PATH)/cpython-3.9.6-x86_64.tar.zst
    tar -axvf $(BUILD_PATH)/cpython-3.9.6-x86_64.tar.zst -C $(PYTHON_DIR)
  displayName: 'pull embedded python'

- script: |
    wget "https://bootstrap.pypa.io/get-pip.py" -O $(PYTHON_SCRIPTS_DIR)/get-pip.py
    $(PYTHON_EXE) $(PYTHON_SCRIPTS_DIR)/get-pip.py
  displayName: 'install pip'

- script: |
    python3 -m pip install asyncpg
    python3 $(Build.Repository.LocalPath)/contrib/mapi_db_config.py
  displayName: 'prepare postgres'

- script: |
    cp -r ./contrib/sitecustomize.py $(PYTHON_DIR)/sitecustomize.py
    cp -r ./contrib/python39._pth $(PYTHON_DIR)/python39._pth
    export TOP_LEVEL_DIR=$PWD
    git clone --depth 1 https://github.com/electrumsv/electrumsv-sdk.git $(SDK_REPO_DIR)
    cd $(SDK_REPO_DIR)
    $(PYTHON_EXE) -m pip install .
    cd $TOP_LEVEL_DIR
  displayName: 'install ElectrumSV-SDK'

- script: |
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk config --sdk-home-dir=$(SDK_DATADIR)

    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk install node
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk install electrumx
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk install electrumsv
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk install merchant_api
  displayName: 'pre-install python-based SDK components'

- script: |
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk start --background status_monitor
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk start --background node
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk start --background electrumx
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk node generate 1
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk start --background --deterministic-seed electrumsv
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk start --background merchant_api
    sleep 5
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk status
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk node --id=node1 getinfo

    $(PYTHON_EXE) ./contrib/check_all_started.py
  displayName: 'start all python-based components (testing)'
  continueOnError: true

- script: |
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk stop node
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk stop electrumx
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk stop electrumsv
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk stop status_monitor
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk stop merchant_api
    $(PYTHON_SCRIPTS_DIR)/electrumsv-sdk status

    $(PYTHON_EXE) ./contrib/check_all_stopped.py
  displayName: 'stop all python-based components (testing)'
  continueOnError: true

- script: |
    cd $(BUILD_PATH)
    mkdir headless_sdk
    cp -r $(PYTHON_DIR)/python headless_sdk/python
    cp -r $(BUILD_PATH)/ElectrumSV-SDK headless_sdk/SDK_HOME_DIR
    tar -czf headless-sdk-$(SDK_VERSION)-linux-x86_64.tar.gz headless_sdk
  displayName: 'Create compressed archive'

- task: PublishBuildArtifacts@1
  displayName: 'publish headless SDK'
  inputs:
    artifactName: 'LinuxHeadlessSDK'
    pathtoPublish: '$(BUILD_PATH)/headless-sdk-$(SDK_VERSION)-linux-x86_64.tar.gz'
